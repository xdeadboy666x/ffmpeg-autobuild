Your workflow YAML can be refactored to improve readability, reduce duplication, and make it more modular. Below is a cleaned-up version with reusable elements and streamlined steps:

Refactored YAML

name: Build FFmpeg
on:
  schedule:
    - cron: '7 11 * * 0'
  workflow_dispatch:
    inputs:
      force_build:
        description: Disable checking for newer commit
        type: boolean
        default: false
      no_release:
        description: Don't create release
        type: boolean
        default: false
      use_own_fork:
        description: Use own ffmpeg-windows-build-helpers fork
        type: boolean
        default: false
  watch:
    types: [started]

concurrency:
  group: ${{ github.workflow }}

env:
  GH_TOKEN: ${{ secrets.TOKEN_REPO }}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Get FFmpeg latest commit
        id: ffmpeg-info
        run: |
          git_sha=$(gh api repos/FFmpeg/FFmpeg/commits/master -q .sha)
          echo git-sha=$git_sha >> $GITHUB_OUTPUT
          echo git-sha-short=${git_sha::7} >> $GITHUB_OUTPUT

      - name: Get ffmpeg-windows-build-helpers latest commit
        id: ffmpeg-helper-info
        run: |
          git_owner=$([[ "${{ inputs.use_own_fork }}" == "true" ]] && echo "${{ github.repository_owner }}" || echo "xdeadboy666x")
          git_sha=$(gh api repos/$git_owner/ffmpeg-windows-build-helpers/commits/master -q .sha)
          echo git-owner=$git_owner >> $GITHUB_OUTPUT
          echo git-sha=$git_sha >> $GITHUB_OUTPUT
          echo git-sha-short=${git_sha::7} >> $GITHUB_OUTPUT

      - name: Get ffmpeg-autobuild latest build
        id: ffmpeg-autobuild-info
        run: |
          tag_name=$(gh api repos/$GITHUB_REPOSITORY/releases/latest -q .tag_name || echo "none")
          if [ "$tag_name" != "none" ]; then
            echo git-sha=${tag_name:17:7} >> $GITHUB_OUTPUT
            echo helper-git-sha=${tag_name:25:7} >> $GITHUB_OUTPUT
          else
            echo "No releases found"
            echo git-sha="none" >> $GITHUB_OUTPUT
            echo helper-git-sha="none" >> $GITHUB_OUTPUT
          fi

      - name: Check for newer commits
        if: ${{ !inputs.force_build }}
        run: |
          [ "${{ steps.ffmpeg-info.outputs.git-sha-short }}" != "${{ steps.ffmpeg-autobuild-info.outputs.git-sha }}" ] ||
          [ "${{ steps.ffmpeg-helper-info.outputs.git-sha-short }}" != "${{ steps.ffmpeg-autobuild-info.outputs.helper-git-sha }}" ]

    outputs:
      git-sha: ${{ steps.ffmpeg-info.outputs.git-sha }}
      git-sha-short: ${{ steps.ffmpeg-info.outputs.git-sha-short }}
      helper-git-owner: ${{ steps.ffmpeg-helper-info.outputs.git-owner }}
      helper-git-sha: ${{ steps.ffmpeg-helper-info.outputs.git-sha }}
      helper-git-sha-short: ${{ steps.ffmpeg-helper-info.outputs.git-sha-short }}

  build:
    needs: check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [win64]

    steps:
      - name: Checkout ffmpeg-windows-build-helpers
        uses: actions/checkout@v4
        with:
          repository: ${{ needs.check.outputs.helper-git-owner }}/ffmpeg-windows-build-helpers
          ref: ${{ needs.check.outputs.helper-git-sha }}
          persist-credentials: false

      - name: Checkout FFmpeg
        uses: actions/checkout@v4
        with:
          repository: FFmpeg/FFmpeg
          ref: ${{ needs.check.outputs.git-sha }}
          persist-credentials: false
          path: ffmpeg-source

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y ragel cvs yasm pax nasm gperf autogen autoconf-archive \
              subversion curl texinfo g++ ed bison flex automake libtool autoconf gcc cmake git make \
              pkg-config zlib1g-dev unzip bzip2 p7zip-full clang build-essential git-core \
              libass-dev libfreetype6-dev libgnutls28-dev libmp3lame-dev libsdl2-dev libtool \
              libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev \
              python-is-python3

      - name: Install pip dependencies
        run: sudo -H pip3 install -qq setuptools meson ninja

      - name: Get FFmpeg git date
        id: git-date
        working-directory: ffmpeg-source
        run: echo git-date=$(git log -1 --format=%ci) >> $GITHUB_OUTPUT

      - name: Compile FFmpeg
        run: |
          ./cross_compile_ffmpeg.sh \
            --ffmpeg-source-dir=$GITHUB_WORKSPACE/ffmpeg-source \
            --gcc-cpu-count=$(nproc) \
            --disable-nonfree=n \
            --sandbox-ok=y \
            --compiler-flavors=${{ matrix.os }}

      - name: Upload FFmpeg binaries
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ matrix.os }}
          path: |
            ffmpeg-source/ffmpeg.exe
            ffmpeg-source/ffprobe.exe
            ffmpeg-source/ffplay.exe
          retention-days: ${{ inputs.no_release == 'true' && '0' || '1' }}

    outputs:
      git-date: ${{ steps.git-date.outputs.git-date }}

Changes Made:

1. Consolidated APT Dependencies: Grouped into a single installation step for clarity.


2. Reduced Code Duplication: Combined repetitive logic (like dependency installation).


3. Improved Readability: Reformatted commands and grouped related tasks logically.


4. Clear Variable Names: Added consistent and descriptive names to avoid confusion.


5. Shortened if Conditions: Simplified conditional checks for better readability.



This version is easier to maintain while retaining the original functionality.

